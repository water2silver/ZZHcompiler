declare i32 @V = 4
declare i32 @space = 32
declare i32 @LF = 10
define void @printSolution(i32 %t5[0]) {
	declare i32 %l4[0] ; variable: color
	declare i32 %l6 ; variable: i
	declare i1 %t7
	declare i32 %t8
	declare i32* %t9
	declare i32 %t10
	declare i32 %t11
.L1:
	entry
	%l4 = %t5
	%l6 = 0
.L3:
	%t7 = icmp lt %l6, @V
	bc %t7, label .L4, label .L5
.L4:
	%t8 = mul %l6, 4
	%t9 = add %l4, %t8
	%t10 = *%t9
	call void @putint(i32 %t10)
	call void @putch(i32 @space)
	%t11 = add %l6, 1
	%l6 = %t11
	br label .L3
.L5:
	call void @putch(i32 @LF)
.L2:
	exit
}
define void @printMessage() {
.L6:
	entry
	call void @putch(i32 78)
	call void @putch(i32 111)
	call void @putch(i32 116)
	call void @putch(i32 @space)
	call void @putch(i32 101)
	call void @putch(i32 120)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 116)
.L7:
	exit
}
define i32 @isSafe(i32 %t15[0][0], i32 %t17[0]) {
	declare i32 %l13
	declare i32 %l14[0][0] ; variable: graph
	declare i32 %l16[0] ; variable: color
	declare i32 %l18 ; variable: i
	declare i32 %l20 ; variable: j
	declare i1 %t19
	declare i32 %t21
	declare i1 %t22
	declare i32 %t23
	declare i32 %t24
	declare i32 %t25
	declare i32* %t26
	declare i32 %t27
	declare i32 %t28
	declare i1 %t29
	declare i32 %t30
	declare i32* %t31
	declare i32 %t32
	declare i32 %t33
	declare i32* %t34
	declare i32 %t35
	declare i1 %t36
	declare i32 %t37
	declare i32 %t38
.L8:
	entry
	%l14 = %t15
	%l16 = %t17
	%l18 = 0
.L10:
	%t19 = icmp lt %l18, @V
	bc %t19, label .L11, label .L12
.L11:
	%t21 = add %l18, 1
	%l20 = %t21
.L13:
	%t22 = icmp lt %l20, @V
	bc %t22, label .L14, label .L15
.L14:
	%t23 = mul %l18, 0
	%t24 = add %t23, %l20
	%t25 = mul %t24, 4
	%t26 = add %l14, %t25
	%t27 = *%t26
	%t28 = %t27
	%t29 = icmp ne %t28, 0
	bc %t29, label .L19, label .L17
.L19:
	%t30 = mul %l20, 4
	%t31 = add %l16, %t30
	%t32 = *%t31
	%t33 = mul %l18, 4
	%t34 = add %l16, %t33
	%t35 = *%t34
	%t36 = icmp eq %t32, %t35
	bc %t36, label .L16, label .L17
.L16:
	%l13 = 0
	br label .L9
.L17:
.L18:
	%t37 = add %l20, 1
	%l20 = %t37
	br label .L13
.L15:
	%t38 = add %l18, 1
	%l18 = %t38
	br label .L10
.L12:
	%l13 = 1
	br label .L9
.L9:
	exit %l13
}
define i32 @graphColoring(i32 %t41[0][0], i32 %t43, i32 %t45, i32 %t47[0]) {
	declare i32 %l39
	declare i32 %l40[0][0] ; variable: graph
	declare i32 %l42 ; variable: m
	declare i32 %l44 ; variable: i
	declare i32 %l46[0] ; variable: color
	declare i32 %l51 ; variable: j
	declare i1 %t48
	declare i32 %t49
	declare i1 %t50
	declare i1 %t52
	declare i32 %t53
	declare i32* %t54
	declare i32 %t55
	declare i32 %t56
	declare i1 %t57
	declare i32 %t58
	declare i32* %t59
	declare i32 %t60
.L20:
	entry
	%l40 = %t41
	%l42 = %t43
	%l44 = %t45
	%l46 = %t47
	%t48 = icmp eq %l44, @V
	bc %t48, label .L22, label .L23
.L22:
	%t49 = call i32 @isSafe(i32 %l40[0][0], i32 %l46[0])
	%t50 = icmp ne %t49, 0
	bc %t50, label .L25, label .L26
.L25:
	call void @printSolution(i32 %l46[0])
	%l39 = 1
	br label .L21
.L26:
.L27:
	%l39 = 0
	br label .L21
.L23:
.L24:
	%l51 = 1
.L28:
	%t52 = icmp le %l51, %l42
	bc %t52, label .L29, label .L30
.L29:
	%t53 = mul %l44, 4
	%t54 = add %l46, %t53
	*%t54 = %l51
	%t55 = add %l44, 1
	%t56 = call i32 @graphColoring(i32 %l40[0][0], i32 %l42, i32 %t55, i32 %l46[0])
	%t57 = icmp ne %t56, 0
	bc %t57, label .L31, label .L32
.L31:
	%l39 = 1
	br label .L21
.L32:
.L33:
	%t58 = mul %l44, 4
	%t59 = add %l46, %t58
	*%t59 = 0
	%t60 = add %l51, 1
	%l51 = %t60
	br label .L28
.L30:
	%l39 = 0
	br label .L21
.L21:
	exit %l39
}
define i32 @main() {
	declare i32 %l61
	declare i32 %l62[4][4] ; variable: graph
	declare i32 %l127 ; variable: m
	declare i32 %l128[4] ; variable: color
	declare i32 %l129 ; variable: i
	declare i32 %t63
	declare i32 %t64
	declare i32 %t65
	declare i32* %t66
	declare i32 %t67
	declare i32 %t68
	declare i32 %t69
	declare i32* %t70
	declare i32 %t71
	declare i32 %t72
	declare i32 %t73
	declare i32* %t74
	declare i32 %t75
	declare i32 %t76
	declare i32 %t77
	declare i32* %t78
	declare i32 %t79
	declare i32 %t80
	declare i32 %t81
	declare i32* %t82
	declare i32 %t83
	declare i32 %t84
	declare i32 %t85
	declare i32* %t86
	declare i32 %t87
	declare i32 %t88
	declare i32 %t89
	declare i32* %t90
	declare i32 %t91
	declare i32 %t92
	declare i32 %t93
	declare i32* %t94
	declare i32 %t95
	declare i32 %t96
	declare i32 %t97
	declare i32* %t98
	declare i32 %t99
	declare i32 %t100
	declare i32 %t101
	declare i32* %t102
	declare i32 %t103
	declare i32 %t104
	declare i32 %t105
	declare i32* %t106
	declare i32 %t107
	declare i32 %t108
	declare i32 %t109
	declare i32* %t110
	declare i32 %t111
	declare i32 %t112
	declare i32 %t113
	declare i32* %t114
	declare i32 %t115
	declare i32 %t116
	declare i32 %t117
	declare i32* %t118
	declare i32 %t119
	declare i32 %t120
	declare i32 %t121
	declare i32* %t122
	declare i32 %t123
	declare i32 %t124
	declare i32 %t125
	declare i32* %t126
	declare i1 %t130
	declare i32 %t131
	declare i32* %t132
	declare i32 %t133
	declare i32 %t134
	declare i1 %t135
.L34:
	entry
	%t63 = mul 0, 4
	%t64 = add %t63, 0
	%t65 = mul %t64, 4
	%t66 = add %l62, %t65
	*%t66 = 0
	%t67 = mul 0, 4
	%t68 = add %t67, 1
	%t69 = mul %t68, 4
	%t70 = add %l62, %t69
	*%t70 = 1
	%t71 = mul 0, 4
	%t72 = add %t71, 2
	%t73 = mul %t72, 4
	%t74 = add %l62, %t73
	*%t74 = 1
	%t75 = mul 0, 4
	%t76 = add %t75, 3
	%t77 = mul %t76, 4
	%t78 = add %l62, %t77
	*%t78 = 1
	%t79 = mul 1, 4
	%t80 = add %t79, 0
	%t81 = mul %t80, 4
	%t82 = add %l62, %t81
	*%t82 = 1
	%t83 = mul 1, 4
	%t84 = add %t83, 1
	%t85 = mul %t84, 4
	%t86 = add %l62, %t85
	*%t86 = 0
	%t87 = mul 1, 4
	%t88 = add %t87, 2
	%t89 = mul %t88, 4
	%t90 = add %l62, %t89
	*%t90 = 1
	%t91 = mul 1, 4
	%t92 = add %t91, 3
	%t93 = mul %t92, 4
	%t94 = add %l62, %t93
	*%t94 = 0
	%t95 = mul 2, 4
	%t96 = add %t95, 0
	%t97 = mul %t96, 4
	%t98 = add %l62, %t97
	*%t98 = 1
	%t99 = mul 2, 4
	%t100 = add %t99, 1
	%t101 = mul %t100, 4
	%t102 = add %l62, %t101
	*%t102 = 1
	%t103 = mul 2, 4
	%t104 = add %t103, 2
	%t105 = mul %t104, 4
	%t106 = add %l62, %t105
	*%t106 = 0
	%t107 = mul 2, 4
	%t108 = add %t107, 3
	%t109 = mul %t108, 4
	%t110 = add %l62, %t109
	*%t110 = 1
	%t111 = mul 3, 4
	%t112 = add %t111, 0
	%t113 = mul %t112, 4
	%t114 = add %l62, %t113
	*%t114 = 1
	%t115 = mul 3, 4
	%t116 = add %t115, 1
	%t117 = mul %t116, 4
	%t118 = add %l62, %t117
	*%t118 = 0
	%t119 = mul 3, 4
	%t120 = add %t119, 2
	%t121 = mul %t120, 4
	%t122 = add %l62, %t121
	*%t122 = 1
	%t123 = mul 3, 4
	%t124 = add %t123, 3
	%t125 = mul %t124, 4
	%t126 = add %l62, %t125
	*%t126 = 0
	%l127 = 3
	%l129 = 0
.L36:
	%t130 = icmp lt %l129, @V
	bc %t130, label .L37, label .L38
.L37:
	%t131 = mul %l129, 4
	%t132 = add %l128, %t131
	*%t132 = 0
	%t133 = add %l129, 1
	%l129 = %t133
	br label .L36
.L38:
	%t134 = call i32 @graphColoring(i32 %l62[4][4], i32 %l127, i32 0, i32 %l128[4])
	%t135 = icmp ne %t134, 0
	bc %t135, label .L40, label .L39
.L39:
	call void @printMessage()
.L40:
.L41:
	%l61 = 0
	br label .L35
.L35:
	exit %l61
}
