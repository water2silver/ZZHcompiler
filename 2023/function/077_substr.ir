define i32 @MAX(i32 %t2, i32 %t4) {
	declare i32 %l0
	declare i32 %l1 ; variable: a
	declare i32 %l3 ; variable: b
	declare i1 %t5
	declare i1 %t6
.L1:
	entry
	%l1 = %t2
	%l3 = %t4
	%t5 = icmp eq %l1, %l3
	bc %t5, label .L3, label .L4
.L3:
	%l0 = %l1
	br label .L2
	br label .L5
.L4:
	%t6 = icmp gt %l1, %l3
	bc %t6, label .L6, label .L7
.L6:
	%l0 = %l1
	br label .L2
	br label .L8
.L7:
	%l0 = %l3
	br label .L2
.L8:
.L5:
.L2:
	exit %l0
}
define i32 @max_sum_nonadjacent(i32 %t9[0], i32 %t11) {
	declare i32 %l7
	declare i32 %l8[0] ; variable: arr
	declare i32 %l10 ; variable: n
	declare i32 %l12[16] ; variable: temp
	declare i32 %l27 ; variable: i
	declare i32 %t13
	declare i32* %t14
	declare i32 %t15
	declare i32* %t16
	declare i32 %t17
	declare i32 %t18
	declare i32* %t19
	declare i32 %t20
	declare i32* %t21
	declare i32 %t22
	declare i32 %t23
	declare i32* %t24
	declare i32 %t25
	declare i32 %t26
	declare i1 %t28
	declare i32 %t29
	declare i32* %t30
	declare i32 %t31
	declare i32 %t32
	declare i32* %t33
	declare i32 %t34
	declare i32 %t35
	declare i32* %t36
	declare i32 %t37
	declare i32 %t38
	declare i32 %t39
	declare i32 %t40
	declare i32* %t41
	declare i32 %t42
	declare i32 %t43
	declare i32 %t44
	declare i32 %t45
	declare i32 %t46
	declare i32* %t47
	declare i32 %t48
.L9:
	entry
	%l8 = %t9
	%l10 = %t11
	%t15 = mul 0, 4
	%t16 = add %l8, %t15
	%t17 = *%t16
	%t13 = mul 0, 4
	%t14 = add %l12, %t13
	*%t14 = %t17
	%t20 = mul 0, 4
	%t21 = add %l8, %t20
	%t22 = *%t21
	%t23 = mul 1, 4
	%t24 = add %l8, %t23
	%t25 = *%t24
	%t26 = call i32 @MAX(i32 %t22, i32 %t25)
	%t18 = mul 1, 4
	%t19 = add %l12, %t18
	*%t19 = %t26
	%l27 = 2
.L11:
	%t28 = icmp lt %l27, %l10
	bc %t28, label .L12, label .L13
.L12:
	%t32 = sub %l27, 2
	%t31 = mul %t32, 4
	%t33 = add %l12, %t31
	%t34 = *%t33
	%t35 = mul %l27, 4
	%t36 = add %l8, %t35
	%t37 = *%t36
	%t38 = add %t34, %t37
	%t40 = sub %l27, 1
	%t39 = mul %t40, 4
	%t41 = add %l12, %t39
	%t42 = *%t41
	%t43 = call i32 @MAX(i32 %t38, i32 %t42)
	%t29 = mul %l27, 4
	%t30 = add %l12, %t29
	*%t30 = %t43
	%t44 = add %l27, 1
	%l27 = %t44
	br label .L11
.L13:
	%t46 = sub %l10, 1
	%t45 = mul %t46, 4
	%t47 = add %l12, %t45
	%t48 = *%t47
	%l7 = %t48
	br label .L10
.L10:
	exit %l7
}
define i32 @longest_common_subseq(i32 %t51[0], i32 %t53, i32 %t55[0], i32 %t57) {
	declare i32 %l49
	declare i32 %l50[0] ; variable: arr1
	declare i32 %l52 ; variable: len1
	declare i32 %l54[0] ; variable: arr2
	declare i32 %l56 ; variable: len2
	declare i32 %l58[16][16] ; variable: p
	declare i32 %l59 ; variable: i
	declare i32 %l60 ; variable: j
	declare i1 %t61
	declare i1 %t62
	declare i32 %t63
	declare i32 %t64
	declare i32* %t65
	declare i32 %t66
	declare i32 %t67
	declare i32 %t68
	declare i32* %t69
	declare i32 %t70
	declare i1 %t71
	declare i32 %t72
	declare i32 %t73
	declare i32 %t74
	declare i32* %t75
	declare i32 %t76
	declare i32 %t77
	declare i32 %t78
	declare i32 %t79
	declare i32 %t80
	declare i32* %t81
	declare i32 %t82
	declare i32 %t83
	declare i32 %t84
	declare i32 %t85
	declare i32 %t86
	declare i32* %t87
	declare i32 %t88
	declare i32 %t89
	declare i32 %t90
	declare i32 %t91
	declare i32* %t92
	declare i32 %t93
	declare i32 %t94
	declare i32 %t95
	declare i32 %t96
	declare i32 %t97
	declare i32* %t98
	declare i32 %t99
	declare i32 %t100
	declare i32 %t101
	declare i32 %t102
	declare i32 %t103
	declare i32 %t104
	declare i32 %t105
	declare i32* %t106
	declare i32 %t107
.L14:
	entry
	%l50 = %t51
	%l52 = %t53
	%l54 = %t55
	%l56 = %t57
	%l59 = 1
.L16:
	%t61 = icmp le %l59, %l52
	bc %t61, label .L17, label .L18
.L17:
	%l60 = 1
.L19:
	%t62 = icmp le %l60, %l56
	bc %t62, label .L20, label .L21
.L20:
	%t64 = sub %l59, 1
	%t63 = mul %t64, 4
	%t65 = add %l50, %t63
	%t66 = *%t65
	%t68 = sub %l60, 1
	%t67 = mul %t68, 4
	%t69 = add %l54, %t67
	%t70 = *%t69
	%t71 = icmp eq %t66, %t70
	bc %t71, label .L22, label .L23
.L22:
	%t78 = sub %l59, 1
	%t79 = sub %l60, 1
	%t76 = mul %t78, 16
	%t77 = add %t76, %t79
	%t80 = mul %t77, 4
	%t81 = add %l58, %t80
	%t82 = *%t81
	%t83 = add %t82, 1
	%t72 = mul %l59, 16
	%t73 = add %t72, %l60
	%t74 = mul %t73, 4
	%t75 = add %l58, %t74
	*%t75 = %t83
	br label .L24
.L23:
	%t90 = sub %l59, 1
	%t88 = mul %t90, 16
	%t89 = add %t88, %l60
	%t91 = mul %t89, 4
	%t92 = add %l58, %t91
	%t93 = *%t92
	%t96 = sub %l60, 1
	%t94 = mul %l59, 16
	%t95 = add %t94, %t96
	%t97 = mul %t95, 4
	%t98 = add %l58, %t97
	%t99 = *%t98
	%t100 = call i32 @MAX(i32 %t93, i32 %t99)
	%t84 = mul %l59, 16
	%t85 = add %t84, %l60
	%t86 = mul %t85, 4
	%t87 = add %l58, %t86
	*%t87 = %t100
.L24:
	%t101 = add %l60, 1
	%l60 = %t101
	br label .L19
.L21:
	%t102 = add %l59, 1
	%l59 = %t102
	br label .L16
.L18:
	%t103 = mul %l52, 16
	%t104 = add %t103, %l56
	%t105 = mul %t104, 4
	%t106 = add %l58, %t105
	%t107 = *%t106
	%l49 = %t107
	br label .L15
.L15:
	exit %l49
}
define i32 @main() {
	declare i32 %l108
	declare i32 %l109[15] ; variable: A
	declare i32 %l140[13] ; variable: B
	declare i32 %l167 ; variable: An
	declare i32 %l168 ; variable: Bn
	declare i32 %t110
	declare i32* %t111
	declare i32 %t112
	declare i32* %t113
	declare i32 %t114
	declare i32* %t115
	declare i32 %t116
	declare i32* %t117
	declare i32 %t118
	declare i32* %t119
	declare i32 %t120
	declare i32* %t121
	declare i32 %t122
	declare i32* %t123
	declare i32 %t124
	declare i32* %t125
	declare i32 %t126
	declare i32* %t127
	declare i32 %t128
	declare i32* %t129
	declare i32 %t130
	declare i32* %t131
	declare i32 %t132
	declare i32* %t133
	declare i32 %t134
	declare i32* %t135
	declare i32 %t136
	declare i32* %t137
	declare i32 %t138
	declare i32* %t139
	declare i32 %t141
	declare i32* %t142
	declare i32 %t143
	declare i32* %t144
	declare i32 %t145
	declare i32* %t146
	declare i32 %t147
	declare i32* %t148
	declare i32 %t149
	declare i32* %t150
	declare i32 %t151
	declare i32* %t152
	declare i32 %t153
	declare i32* %t154
	declare i32 %t155
	declare i32* %t156
	declare i32 %t157
	declare i32* %t158
	declare i32 %t159
	declare i32* %t160
	declare i32 %t161
	declare i32* %t162
	declare i32 %t163
	declare i32* %t164
	declare i32 %t165
	declare i32* %t166
	declare i32 %t169
	declare i32 %t170
.L25:
	entry
	%t110 = mul 0, 4
	%t111 = add %l109, %t110
	*%t111 = 8
	%t112 = mul 1, 4
	%t113 = add %l109, %t112
	*%t113 = 7
	%t114 = mul 2, 4
	%t115 = add %l109, %t114
	*%t115 = 4
	%t116 = mul 3, 4
	%t117 = add %l109, %t116
	*%t117 = 1
	%t118 = mul 4, 4
	%t119 = add %l109, %t118
	*%t119 = 2
	%t120 = mul 5, 4
	%t121 = add %l109, %t120
	*%t121 = 7
	%t122 = mul 6, 4
	%t123 = add %l109, %t122
	*%t123 = 0
	%t124 = mul 7, 4
	%t125 = add %l109, %t124
	*%t125 = 1
	%t126 = mul 8, 4
	%t127 = add %l109, %t126
	*%t127 = 9
	%t128 = mul 9, 4
	%t129 = add %l109, %t128
	*%t129 = 3
	%t130 = mul 10, 4
	%t131 = add %l109, %t130
	*%t131 = 4
	%t132 = mul 11, 4
	%t133 = add %l109, %t132
	*%t133 = 8
	%t134 = mul 12, 4
	%t135 = add %l109, %t134
	*%t135 = 3
	%t136 = mul 13, 4
	%t137 = add %l109, %t136
	*%t137 = 7
	%t138 = mul 14, 4
	%t139 = add %l109, %t138
	*%t139 = 0
	%t141 = mul 0, 4
	%t142 = add %l140, %t141
	*%t142 = 3
	%t143 = mul 1, 4
	%t144 = add %l140, %t143
	*%t144 = 9
	%t145 = mul 2, 4
	%t146 = add %l140, %t145
	*%t146 = 7
	%t147 = mul 3, 4
	%t148 = add %l140, %t147
	*%t148 = 1
	%t149 = mul 4, 4
	%t150 = add %l140, %t149
	*%t150 = 4
	%t151 = mul 5, 4
	%t152 = add %l140, %t151
	*%t152 = 2
	%t153 = mul 6, 4
	%t154 = add %l140, %t153
	*%t154 = 4
	%t155 = mul 7, 4
	%t156 = add %l140, %t155
	*%t156 = 3
	%t157 = mul 8, 4
	%t158 = add %l140, %t157
	*%t158 = 6
	%t159 = mul 9, 4
	%t160 = add %l140, %t159
	*%t160 = 8
	%t161 = mul 10, 4
	%t162 = add %l140, %t161
	*%t162 = 0
	%t163 = mul 11, 4
	%t164 = add %l140, %t163
	*%t164 = 1
	%t165 = mul 12, 4
	%t166 = add %l140, %t165
	*%t166 = 5
	%t169 = call i32 @max_sum_nonadjacent(i32 %l109[15], i32 15)
	call void @putint(i32 %t169)
	call void @putch(i32 10)
	%t170 = call i32 @longest_common_subseq(i32 %l109[15], i32 15, i32 %l140[13], i32 13)
	call void @putint(i32 %t170)
	call void @putch(i32 10)
	%l108 = 0
	br label .L26
.L26:
	exit %l108
}
