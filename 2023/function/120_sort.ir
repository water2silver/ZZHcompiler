declare i32 @n
declare i32 @maxn = 100005
declare i32 @cnt[400020]
declare i32 @x[100005]
declare i32 @a[100005]
declare i32 @b[100005]
declare i32 @c[100005]
define i32 @quick_read() {
	declare i32 %l0
	declare i32 %l1 ; variable: ch
	declare i32 %l3 ; variable: x
	declare i32 %l4 ; variable: f
	declare i32 %t2
	declare i1 %t5
	declare i1 %t6
	declare i1 %t7
	declare i32 %t8
	declare i1 %t9
	declare i1 %t10
	declare i32 %t11
	declare i32 %t12
	declare i32 %t13
	declare i32 %t14
	declare i32 %t15
	declare i1 %t16
	declare i32 %t17
.L1:
	entry
	%t2 = call i32 @getch()
	%l1 = %t2
	%l3 = 0
	%l4 = 0
.L3:
	%t5 = icmp lt %l1, 48
	bc %t5, label .L4, label .L6
.L6:
	%t6 = icmp gt %l1, 57
	bc %t6, label .L4, label .L5
.L4:
	%t7 = icmp eq %l1, 45
	bc %t7, label .L7, label .L8
.L7:
	%l4 = 1
.L8:
.L9:
	%t8 = call i32 @getch()
	%l1 = %t8
	br label .L3
.L5:
.L10:
	%t9 = icmp ge %l1, 48
	bc %t9, label .L13, label .L12
.L13:
	%t10 = icmp le %l1, 57
	bc %t10, label .L11, label .L12
.L11:
	%t11 = mul %l3, 10
	%t12 = add %t11, %l1
	%t13 = sub %t12, 48
	%l3 = %t13
	%t14 = call i32 @getch()
	%l1 = %t14
	br label .L10
.L12:
	%t15 = %l4
	%t16 = icmp ne %t15, 0
	bc %t16, label .L14, label .L15
.L14:
	%t17 = neg %l3
	%l0 = %t17
	br label .L2
	br label .L16
.L15:
	%l0 = %l3
	br label .L2
.L16:
.L2:
	exit %l0
}
define void @sortA(i32 %t22[0]) {
	declare i32 %l21[0] ; variable: a
	declare i32 %l23 ; variable: i
	declare i32 %l24 ; variable: j
	declare i32 %l35 ; variable: t
	declare i1 %t25
	declare i32 %t26
	declare i1 %t27
	declare i32 %t28
	declare i32* %t29
	declare i32 %t30
	declare i32 %t31
	declare i32* %t32
	declare i32 %t33
	declare i1 %t34
	declare i32 %t36
	declare i32* %t37
	declare i32 %t38
	declare i32 %t39
	declare i32* %t40
	declare i32 %t41
	declare i32* %t42
	declare i32 %t43
	declare i32 %t44
	declare i32* %t45
	declare i32 %t46
	declare i32 %t47
.L17:
	entry
	%l21 = %t22
	%l23 = 0
.L19:
	%t25 = icmp lt %l23, @n
	bc %t25, label .L20, label .L21
.L20:
	%t26 = add %l23, 1
	%l24 = %t26
.L22:
	%t27 = icmp lt %l24, @n
	bc %t27, label .L23, label .L24
.L23:
	%t28 = mul %l23, 4
	%t29 = add %l21, %t28
	%t30 = *%t29
	%t31 = mul %l24, 4
	%t32 = add %l21, %t31
	%t33 = *%t32
	%t34 = icmp gt %t30, %t33
	bc %t34, label .L25, label .L26
.L25:
	%t36 = mul %l23, 4
	%t37 = add %l21, %t36
	%t38 = *%t37
	%l35 = %t38
	%t41 = mul %l24, 4
	%t42 = add %l21, %t41
	%t43 = *%t42
	%t39 = mul %l23, 4
	%t40 = add %l21, %t39
	*%t40 = %t43
	%t44 = mul %l24, 4
	%t45 = add %l21, %t44
	*%t45 = %l35
.L26:
.L27:
	%t46 = add %l24, 1
	%l24 = %t46
	br label .L22
.L24:
	%t47 = add %l23, 1
	%l23 = %t47
	br label .L19
.L21:
.L18:
	exit
}
define void @sortB(i32 %t51[0]) {
	declare i32 %l50[0] ; variable: a
	declare i32 %l52 ; variable: i
	declare i32 %l53 ; variable: mx
	declare i32 %l75 ; variable: now
	declare i32 %l77 ; variable: j
	declare i1 %t54
	declare i32 %t55
	declare i32 %t56
	declare i32* %t57
	declare i32 %t58
	declare i32* %t59
	declare i32 %t60
	declare i32 %t61
	declare i32* %t62
	declare i32 %t63
	declare i32* %t64
	declare i32 %t65
	declare i32 %t66
	declare i32 %t67
	declare i32* %t68
	declare i32 %t69
	declare i1 %t70
	declare i32 %t71
	declare i32* %t72
	declare i32 %t73
	declare i32 %t74
	declare i1 %t76
	declare i32 %t78
	declare i32* %t79
	declare i32 %t80
	declare i32 %t81
	declare i1 %t82
	declare i32 %t83
	declare i32* %t84
	declare i32 %t85
	declare i32 %t86
	declare i32 %t87
.L28:
	entry
	%l50 = %t51
	%l52 = 0
	%l53 = -100
.L30:
	%t54 = icmp lt %l52, @n
	bc %t54, label .L31, label .L32
.L31:
	%t61 = mul %l52, 4
	%t62 = add %l50, %t61
	%t63 = *%t62
	%t60 = mul %t63, 4
	%t64 = add @cnt, %t60
	%t65 = *%t64
	%t66 = add %t65, 1
	%t56 = mul %l52, 4
	%t57 = add %l50, %t56
	%t58 = *%t57
	%t55 = mul %t58, 4
	%t59 = add @cnt, %t55
	*%t59 = %t66
	%t67 = mul %l52, 4
	%t68 = add %l50, %t67
	%t69 = *%t68
	%t70 = icmp gt %t69, %l53
	bc %t70, label .L33, label .L34
.L33:
	%t71 = mul %l52, 4
	%t72 = add %l50, %t71
	%t73 = *%t72
	%l53 = %t73
.L34:
.L35:
	%t74 = add %l52, 1
	%l52 = %t74
	br label .L30
.L32:
	%l52 = 0
	%l75 = 0
.L36:
	%t76 = icmp le %l52, %l53
	bc %t76, label .L37, label .L38
.L37:
	%t78 = mul %l52, 4
	%t79 = add @cnt, %t78
	%t80 = *%t79
	%l77 = %t80
.L39:
	%t81 = %l77
	%t82 = icmp ne %t81, 0
	bc %t82, label .L40, label .L41
.L40:
	%t83 = mul %l75, 4
	%t84 = add %l50, %t83
	*%t84 = %l52
	%t85 = add %l75, 1
	%l75 = %t85
	%t86 = sub %l77, 1
	%l77 = %t86
	br label .L39
.L41:
	%t87 = add %l52, 1
	%l52 = %t87
	br label .L36
.L38:
.L29:
	exit
}
define void @sortC(i32 %t90[0]) {
	declare i32 %l89[0] ; variable: a
	declare i32 %l91 ; variable: i
	declare i32 %l93 ; variable: id
	declare i32 %l94 ; variable: j
	declare i32 %l105 ; variable: t
	declare i1 %t92
	declare i32 %t95
	declare i1 %t96
	declare i32 %t97
	declare i32* %t98
	declare i32 %t99
	declare i32 %t100
	declare i32* %t101
	declare i32 %t102
	declare i1 %t103
	declare i32 %t104
	declare i32 %t106
	declare i32* %t107
	declare i32 %t108
	declare i32 %t109
	declare i32* %t110
	declare i32 %t111
	declare i32* %t112
	declare i32 %t113
	declare i32 %t114
	declare i32* %t115
	declare i32 %t116
.L42:
	entry
	%l89 = %t90
	%l91 = 0
.L44:
	%t92 = icmp lt %l91, @n
	bc %t92, label .L45, label .L46
.L45:
	%l93 = %l91
	%t95 = add %l91, 1
	%l94 = %t95
.L47:
	%t96 = icmp lt %l94, @n
	bc %t96, label .L48, label .L49
.L48:
	%t97 = mul %l94, 4
	%t98 = add %l89, %t97
	%t99 = *%t98
	%t100 = mul %l93, 4
	%t101 = add %l89, %t100
	%t102 = *%t101
	%t103 = icmp lt %t99, %t102
	bc %t103, label .L50, label .L51
.L50:
	%l93 = %l94
.L51:
.L52:
	%t104 = add %l94, 1
	%l94 = %t104
	br label .L47
.L49:
	%t106 = mul %l91, 4
	%t107 = add %l89, %t106
	%t108 = *%t107
	%l105 = %t108
	%t111 = mul %l93, 4
	%t112 = add %l89, %t111
	%t113 = *%t112
	%t109 = mul %l91, 4
	%t110 = add %l89, %t109
	*%t110 = %t113
	%t114 = mul %l93, 4
	%t115 = add %l89, %t114
	*%t115 = %l105
	%t116 = add %l91, 1
	%l91 = %t116
	br label .L44
.L46:
.L43:
	exit
}
define i32 @main() {
	declare i32 %l121
	declare i32 %l123 ; variable: i
	declare i32 %t122
	declare i1 %t124
	declare i32 %t125
	declare i32* %t126
	declare i32 %t127
	declare i32 %t128
	declare i32* %t129
	declare i32 %t130
	declare i32* %t131
	declare i32 %t132
	declare i32 %t133
	declare i32* %t134
	declare i32 %t135
	declare i32* %t136
	declare i32 %t137
	declare i32 %t138
	declare i32 %t139
	declare i32 %t140
	declare i32* %t141
	declare i32 %t142
	declare i32* %t143
	declare i32 %t144
	declare i32 %t145
	declare i32* %t146
	declare i32 %t147
	declare i32 %t148
	declare i32 %t149
	declare i32* %t150
	declare i32 %t151
	declare i32* %t152
	declare i32 %t153
	declare i32 %t154
	declare i32* %t155
	declare i32 %t156
	declare i32 %t157
	declare i32 %t158
	declare i32* %t159
	declare i32 %t160
	declare i32 %t161
	declare i32 %t162
	declare i32 %t163
	declare i32 %t164
	declare i32* %t165
	declare i32 %t166
	declare i32 %t167
	declare i1 %t168
	declare i32 %t169
	declare i32* %t170
	declare i32 %t171
	declare i32 %t172
	declare i1 %t173
	declare i32 %t174
.L53:
	entry
	%t122 = call i32 @quick_read()
	@n = %t122
	%l123 = 0
.L55:
	%t124 = icmp eq %l123, @n
	bc %t124, label .L57, label .L56
.L56:
	%t127 = call i32 @quick_read()
	%t125 = mul %l123, 4
	%t126 = add @a, %t125
	*%t126 = %t127
	%t130 = mul %l123, 4
	%t131 = add @a, %t130
	%t132 = *%t131
	%t128 = mul %l123, 4
	%t129 = add @b, %t128
	*%t129 = %t132
	%t135 = mul %l123, 4
	%t136 = add @b, %t135
	%t137 = *%t136
	%t133 = mul %l123, 4
	%t134 = add @c, %t133
	*%t134 = %t137
	%t138 = add %l123, 1
	%l123 = %t138
	br label .L55
.L57:
	call void @sortA(i32 @a[100005])
	call void @sortB(i32 @b[100005])
	call void @sortC(i32 @c[100005])
	%l123 = 0
.L58:
	%t139 = sub @n, %l123
.L59:
	%t142 = mul %l123, 4
	%t143 = add @b, %t142
	%t144 = *%t143
	%t145 = mul %l123, 4
	%t146 = add @a, %t145
	%t147 = *%t146
	%t148 = sub %t144, %t147
	%t140 = mul %l123, 4
	%t141 = add @b, %t140
	*%t141 = %t148
	%t151 = mul %l123, 4
	%t152 = add @c, %t151
	%t153 = *%t152
	%t154 = mul %l123, 4
	%t155 = add @b, %t154
	%t156 = *%t155
	%t157 = sub %t153, %t156
	%t158 = mul %l123, 4
	%t159 = add @a, %t158
	%t160 = *%t159
	%t161 = sub %t157, %t160
	%t149 = mul %l123, 4
	%t150 = add @c, %t149
	*%t150 = %t161
	%t162 = add %l123, 1
	%l123 = %t162
	br label .L58
.L60:
	%l123 = 0
.L61:
	%t163 = sub %l123, @n
.L62:
	%t164 = mul %l123, 4
	%t165 = add @b, %t164
	%t166 = *%t165
	%t167 = %t166
	%t168 = icmp ne %t167, 0
	bc %t168, label .L64, label .L65
.L64:
	%l121 = 1
	br label .L54
.L65:
.L66:
	%t169 = mul %l123, 4
	%t170 = add @c, %t169
	%t171 = *%t170
	%t172 = %t171
	%t173 = icmp ne %t172, 0
	bc %t173, label .L67, label .L68
.L67:
	%l121 = 2
	br label .L54
.L68:
.L69:
	%t174 = add %l123, 1
	%l123 = %t174
	br label .L61
.L63:
	%l121 = -123
	br label .L54
.L54:
	exit %l121
}
