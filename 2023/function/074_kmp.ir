define void @get_next(i32 %t2[0], i32 %t4[0]) {
	declare i32 %l1[0] ; variable: str
	declare i32 %l3[0] ; variable: next
	declare i32 %l7 ; variable: i
	declare i32 %l8 ; variable: j
	declare i32 %t5
	declare i32* %t6
	declare i32 %t9
	declare i32* %t10
	declare i32 %t11
	declare i32 %t12
	declare i1 %t13
	declare i1 %t14
	declare i32 %t15
	declare i32* %t16
	declare i32 %t17
	declare i32 %t18
	declare i32* %t19
	declare i32 %t20
	declare i1 %t21
	declare i32 %t22
	declare i32 %t23
	declare i32 %t24
	declare i32* %t25
	declare i32 %t26
	declare i32* %t27
	declare i32 %t28
.L1:
	entry
	%l1 = %t2
	%l3 = %t4
	%t5 = mul 0, 4
	%t6 = add %l3, %t5
	*%t6 = -1
	%l7 = 0
	%l8 = -1
.L3:
	%t9 = mul %l7, 4
	%t10 = add %l1, %t9
	%t11 = *%t10
	%t12 = %t11
	%t13 = icmp ne %t12, 0
	bc %t13, label .L4, label .L5
.L4:
	%t14 = icmp eq %l8, -1
	bc %t14, label .L6, label .L9
.L9:
	%t15 = mul %l7, 4
	%t16 = add %l1, %t15
	%t17 = *%t16
	%t18 = mul %l8, 4
	%t19 = add %l1, %t18
	%t20 = *%t19
	%t21 = icmp eq %t17, %t20
	bc %t21, label .L6, label .L7
.L6:
	%t22 = add %l8, 1
	%l8 = %t22
	%t23 = add %l7, 1
	%l7 = %t23
	%t24 = mul %l7, 4
	%t25 = add %l3, %t24
	*%t25 = %l8
	br label .L8
.L7:
	%t26 = mul %l8, 4
	%t27 = add %l3, %t26
	%t28 = *%t27
	%l8 = %t28
.L8:
	br label .L3
.L5:
.L2:
	exit
}
define i32 @KMP(i32 %t31[0], i32 %t33[0]) {
	declare i32 %l29
	declare i32 %l30[0] ; variable: dst
	declare i32 %l32[0] ; variable: src
	declare i32 %l34[4096] ; variable: next
	declare i32 %l35 ; variable: i
	declare i32 %l36 ; variable: j
	declare i32 %t37
	declare i32* %t38
	declare i32 %t39
	declare i32 %t40
	declare i1 %t41
	declare i32 %t42
	declare i32* %t43
	declare i32 %t44
	declare i32 %t45
	declare i32* %t46
	declare i32 %t47
	declare i1 %t48
	declare i32 %t49
	declare i32 %t50
	declare i32 %t51
	declare i32* %t52
	declare i32 %t53
	declare i32 %t54
	declare i1 %t55
	declare i1 %t56
	declare i32 %t57
	declare i32* %t58
	declare i32 %t59
	declare i1 %t60
	declare i32 %t61
	declare i32 %t62
.L10:
	entry
	%l30 = %t31
	%l32 = %t33
	call void @get_next(i32 %l30[0], i32 %l34[4096])
	%l35 = 0
	%l36 = 0
.L12:
	%t37 = mul %l36, 4
	%t38 = add %l32, %t37
	%t39 = *%t38
	%t40 = %t39
	%t41 = icmp ne %t40, 0
	bc %t41, label .L13, label .L14
.L13:
	%t42 = mul %l35, 4
	%t43 = add %l30, %t42
	%t44 = *%t43
	%t45 = mul %l36, 4
	%t46 = add %l32, %t45
	%t47 = *%t46
	%t48 = icmp eq %t44, %t47
	bc %t48, label .L15, label .L16
.L15:
	%t49 = add %l35, 1
	%l35 = %t49
	%t50 = add %l36, 1
	%l36 = %t50
	%t51 = mul %l35, 4
	%t52 = add %l30, %t51
	%t53 = *%t52
	%t54 = %t53
	%t55 = icmp ne %t54, 0
	%t56 = icmp ne %t55, 0
	bc %t56, label .L19, label .L18
.L18:
	%l29 = %l36
	br label .L11
.L19:
.L20:
	br label .L17
.L16:
	%t57 = mul %l35, 4
	%t58 = add %l34, %t57
	%t59 = *%t58
	%l35 = %t59
	%t60 = icmp eq %l35, -1
	bc %t60, label .L21, label .L22
.L21:
	%t61 = add %l35, 1
	%l35 = %t61
	%t62 = add %l36, 1
	%l36 = %t62
.L22:
.L23:
.L17:
	br label .L12
.L14:
	%l29 = -1
	br label .L11
.L11:
	exit %l29
}
define i32 @read_str(i32 %t65[0]) {
	declare i32 %l63
	declare i32 %l64[0] ; variable: buf
	declare i32 %l66 ; variable: i
	declare i32 %t67
	declare i32* %t68
	declare i32 %t69
	declare i32 %t70
	declare i32* %t71
	declare i32 %t72
	declare i1 %t73
	declare i32 %t74
	declare i32 %t75
	declare i32* %t76
.L24:
	entry
	%l64 = %t65
	%l66 = 0
.L26:
.L27:
	%t69 = call i32 @getch()
	%t67 = mul %l66, 4
	%t68 = add %l64, %t67
	*%t68 = %t69
	%t70 = mul %l66, 4
	%t71 = add %l64, %t70
	%t72 = *%t71
	%t73 = icmp eq %t72, 10
	bc %t73, label .L29, label .L30
.L29:
	br label .L28
.L30:
.L31:
	%t74 = add %l66, 1
	%l66 = %t74
	br label .L26
.L28:
	%t75 = mul %l66, 4
	%t76 = add %l64, %t75
	*%t76 = 0
	%l63 = %l66
	br label .L25
.L25:
	exit %l63
}
define i32 @main() {
	declare i32 %l77
	declare i32 %l78[4096] ; variable: dst
	declare i32 %l79[4096] ; variable: src
	declare i32 %t80
	declare i32 %t81
	declare i32 %t82
.L32:
	entry
	%t80 = call i32 @read_str(i32 %l78[4096])
	%t81 = call i32 @read_str(i32 %l79[4096])
	%t82 = call i32 @KMP(i32 %l78[4096], i32 %l79[4096])
	call void @putint(i32 %t82)
	call void @putch(i32 10)
	%l77 = 0
	br label .L33
.L33:
	exit %l77
}
